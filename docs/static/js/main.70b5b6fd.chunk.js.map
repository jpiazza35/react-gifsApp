{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","protoTypes","PropTypes","func","isRequired","GifGridItem","id","title","url","console","log","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mOAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAgB5C,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,OAQX,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,YA0B/BZ,EAAYe,WAAa,CACrBd,c,OAAee,EAAUC,KAAKC,YC/B3B,IAAMC,EAAc,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAGpC,OAFAC,QAAQC,IAAIJ,EAAIC,EAAOC,GAGnB,yBAAKG,UAAU,4BACZ,yBAAKC,IAAKJ,EAAKK,IAAMN,IACrB,2BAAIA,K,uBCPFO,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbR,EAFa,iDAEkCS,UAAUF,GAF5C,+DAGAG,MAAMV,GAHN,cAGbW,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAEnB,MAAM,CACFlB,GAAIkB,EAAIlB,GACRC,MAAOiB,EAAIjB,MACXC,IAAKgB,EAAIC,OAAOC,UAAUlB,QAXd,kBAiBbc,GAjBa,4CAAH,sDCIPK,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECHb,SAAEA,GAAe,IAAD,EAEd3B,mBAAS,CAC/BiC,KAAM,GACNO,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAyBxC,OAlBAC,qBAAU,WAENjB,EAAQC,GACPiB,MAAK,SAAAC,GAEFC,YAAW,WAEPJ,EAAS,CACLT,KAAMY,EACNL,SAAS,MAEd,UAIJ,CAACb,IAGDc,EDnBkBM,CAAapB,GAA9BM,EAH6B,EAG7BA,KAAMO,EAHuB,EAGvBA,QAGd,OAEI,oCACI,wBAAIjB,UAAU,uBAAwBI,GAErCa,GAAW,uBAAGjB,UAAU,uBAAb,cAEZ,yBAAKA,UAAU,aAITU,EAAKE,KAAK,SAAAC,GAAG,OACZ,kBAAC,EAAD,eACIY,IAAMZ,EAAIlB,IACLkB,UEpBfa,EAAe,WAAM,IAAD,EACGjD,mBAAS,CAAC,gBADb,mBAC1BkD,EAD0B,KACdnD,EADc,KAM7B,OACA,6BACI,wBAAIwB,UAAU,sBAAd,gBACA,kBAAC,EAAD,CAAaxB,cAAeA,IAC5B,6BAEA,4BAIImD,EAAWf,KAAI,SAAAR,GAAQ,OACnB,kBAAC,EAAD,CACGqB,IAAMrB,EACNA,SAAYA,UClB/BwB,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.70b5b6fd.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = (e) =>{\r\n        setinputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault()\r\n        if(inputValue.trim().length > 2 ){\r\n         setCategories( cats => [inputValue, ...cats]);\r\n         setinputValue('')\r\n     }\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            \r\n            <input\r\n                type=\"text\"   \r\n                value={inputValue}  \r\n                onChange={handleInputChange}     \r\n            />\r\n        \r\n        \r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.protoTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\nimport '../index.css';\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    console.log(id, title, url)\r\n    \r\n    return (\r\n        <div className=\"card animate__rubberBand\">\r\n           <img src={url} alt={ title } />\r\n           <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\n//peticion HTTP HERE:\r\nexport const getGifs = async ( category ) =>{\r\n\r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=0OxrAzAEAQMaV4CdYBMBzN64MMPK6O64`\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    \r\n    const gifs = data.map(img => {\r\n    \r\n       return{\r\n           id: img.id,\r\n           title: img.title,\r\n           url: img.images.downsized.url\r\n   \r\n       }\r\n    })\r\n   \r\n   \r\n   return gifs;\r\n   }\r\n   ","import React from 'react';\r\nimport {GifGridItem} from './GifGridItem';\r\nimport {useFetchGifs} from '../hooks/useFetchGifs';\r\n \r\n\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n\r\n\r\n     const {data, loading} = useFetchGifs(category);\r\n     \r\n     \r\n    return (\r\n        \r\n        <>\r\n            <h3 className=\"animate__rubberBand\">{ category }</h3>\r\n            \r\n            {loading && <p className=\"animate__rubberBand\">Loading...</p>}\r\n\r\n            <div className=\"card-grid\">\r\n           \r\n            \r\n                {\r\n                  data.map( img => (\r\n                   <GifGridItem \r\n                       key={ img.id }  \r\n                       { ...img } />\r\n                  ))\r\n\r\n                }\r\n         \r\n            </div>\r\n        </>\r\n            \r\n    )\r\n}\r\n","import {useState,useEffect} from 'react';\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n        .then(imgs =>{\r\n\r\n            setTimeout(()=>{\r\n                \r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            }, 100); \r\n\r\n            })\r\n            \r\n        }, [category])\r\n    \r\n\r\n    return state; //el state es simplemente {data:[], loading:true}\r\n}","import React, { useState } from 'react';\r\nimport './index.css';\r\nimport {AddCategory} from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport const GifExpertApp = () =>{\r\nconst [categories, setCategories] = useState(['dragon Ball'])\r\n //const categories = ['ONE Punch', 'dragon Ball', 'Samurai X']\r\n  /* const handleAdd = ()=>{\r\n      setCategories([...categories, 'Superman'])\r\n  } */\r\n    return(\r\n    <div>\r\n        <h2 className=\"animate__heartBeat\">GifExpertApp</h2>\r\n        <AddCategory setCategories={setCategories}/>\r\n        <hr/>\r\n      \r\n        <ol>\r\n           {/*  {categories.map(category =>{\r\n                return <li key={ category }>{category}</li>\r\n            })} */\r\n            categories.map(category =>(\r\n                <GifGrid \r\n                   key={ category }\r\n                   category= { category }\r\n                />\r\n            ))\r\n            }\r\n        </ol>\r\n    </div>\r\n           )\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}